import matplotlib.pyplot as plt
scratch_train_acc=[0.5946666666666667, 0.6923333333333334, 0.762, 0.767, 0.7796666666666666, 0.796, 0.7983333333333333, 0.832, 0.815, 0.873, 0.832, 0.791, 0.8296666666666667, 0.862, 0.925, 0.9526666666666667, 0.9276666666666666, 0.9616666666666667, 0.94, 0.9686666666666667, 0.9876666666666667, 0.9833333333333333, 0.9863333333333333, 0.9606666666666667, 0.9866666666666667]
scratch_test_acc=[0.5559006211180124, 0.687888198757764, 0.7111801242236024, 0.7204968944099379, 0.734472049689441, 0.75, 0.7484472049689441, 0.782608695652174, 0.7437888198757764, 0.7872670807453416, 0.7624223602484472, 0.717391304347826, 0.7453416149068323, 0.7608695652173914, 0.7934782608695652, 0.7950310559006211, 0.7437888198757764, 0.7577639751552795, 0.7624223602484472, 0.7841614906832298, 0.7888198757763976, 0.7577639751552795, 0.8043478260869565, 0.7795031055900621, 0.7670807453416149]
epochs=25
iters = range(epochs)
pretr_train_acc=[0.8093333333333333, 0.835, 0.954, 0.9246666666666666, 0.9733333333333334, 0.9336666666666666, 0.8256666666666667, 0.9736666666666667, 0.9873333333333333, 0.9783333333333334, 0.9796666666666667, 0.9863333333333333, 0.9883333333333333, 0.9783333333333334, 0.9713333333333334, 0.986, 0.9736666666666667, 0.9596666666666667, 0.9876666666666667, 0.9646666666666667, 0.9883333333333333, 0.9913333333333333, 0.997, 0.997, 0.983]

pretr_test_acc=[0.765527950310559, 0.7996894409937888, 0.8633540372670807, 0.8338509316770186, 0.8881987577639752, 0.8012422360248447, 0.7406832298136646, 0.8307453416149069, 0.8850931677018633, 0.8571428571428571, 0.8742236024844721, 0.84472049689441, 0.8664596273291926, 0.8509316770186336, 0.8493788819875776, 0.8819875776397516, 0.843167701863354, 0.8462732919254659, 0.8493788819875776, 0.843167701863354, 0.8540372670807453, 0.8773291925465838, 0.8850931677018633, 0.8695652173913043, 0.8649068322981367]
plt.plot(iters, pretr_test_acc, 'g', label='Pretrained')
plt.plot(iters, scratch_test_acc, 'k', label='Scratch')

plt.grid(True)
plt.xlabel('Training Epochs')
plt.ylabel('Acurracy')
plt.legend(loc="lower right")
plt.show()

